# Install the "sos" package
install.packages("sos")
# Load the "sos" package
library(sos)
# Let's find in the help pages for a function that includes the keywords
# directory AND files
a <- findFn("directory files")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
library(sos)
library("sos")
install.packages("sos")
library(sos)
a <- findFn("directory files")
summary(a)
b <- a[a$Package=="base",]
a <- findFn("glob")
summary(a)
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
a <- findFn("path file")
summary(a)
b <- a[a$Package=="base",]
b
search()
searchpaths()
a <- findFn("build path file")
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
a <- findFn("create path file")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
dirname(dir())
dirname()
a <- findFn("concatenate path file")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
a <- findFn("concatenate path")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
a <- findFn("concatenate")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
a <- findFn("folder path")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
?00Index
??00Index
?Index
a <- findFn("directory path")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
file.info()
a <- findFn("file system")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
system.file(package="base")
a <- findFn("directory path")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
a <- findFn("folder path")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
?summary
a <- findFn("file folder path")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
a <- findFn("create folder path")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
a <- findFn("create folder directoy path")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
a <- findFn("create folder directory path")
# Let's take a look at the packages returned
summary(a)
# Now let's subset the results to extract only those functions contained at
# the package "base" which is the one we are working with
b <- a[a$Package=="base",]
# Open the filtered HTML page
b
summary(a, minPackages = 16)
summary(a, minPackages = 87)
rm(list=ls())
library(dagdata)
data(maPooling)
u = exprs(maPooling)[,1]
v = exprs(maPooling)[,2]
x = exprs(maPooling)[,3]
y = exprs(maPooling)[,4]
head(u)
names(u)
dim(u)
length(u)
class(u)
head(u)
u[1]
